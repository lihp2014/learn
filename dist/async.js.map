{"version":3,"sources":["../src/async.js"],"names":["readAsync","data","JSON","parse","console","log","name","init","fs","require","util","promisify","readFile"],"mappings":";;;;;;;;;;;sFAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBA,UAAU,gBAAV,CADnB;;AAAA;AACMC,gBADN;;;AAGEA,mBAAOC,KAAKC,KAAL,CAAWF,IAAX,CAAP;AACAG,oBAAQC,GAAR,CAAYJ,KAAKK,IAAjB;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,I;;;;;;;AAlDf,IAAMC,KAAKC,QAAQ,IAAR,CAAX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAMT,YAAYU,KAAKC,SAAL,CAAeH,GAAGI,QAAlB,CAAlB;;AAOAL","file":"async.js","sourcesContent":["const fs = require('fs')\n\n// 第一阶段\n// function readFile (cb) {\n//   fs.readFile('./package.json', (err, data) => {\n//     if (err) return cb(err)\n//     cb && cb(null, data)\n//   })\n// }\n\n// readFile((err, data) => {\n//   if (!err) {\n//     data = JSON.parse(data)\n//     console.log(data.name)\n//   }\n// })\n\n// 第二阶段 Promise\n// function readFileAsync (path) {\n//   return new Promise((resolve, reject) => {\n//     fs.readFile(path, (err, data) => {\n//       if (err) reject(err)\n//       else resolve(data)\n//     })\n//   })\n// }\n\n// readFileAsync('./package.json')\n//   .then(data => {\n//     data = JSON.parse(data)\n//     console.log(data.name)\n//   })\n//   .catch(err => {\n//     console.log(err)\n//   })\n\n\n// 第三阶段   co + generator + yield \n// const co = require('co')\nconst util = require('util')\n\n// co(function *() {\n//   let data = yield util.promisify(fs.readFile)('./package.json')\n\n//   data = JSON.parse(data)\n//   console.log(data.name)\n// })\n\n// 第四阶段 async统一世界\nconst readAsync = util.promisify(fs.readFile)\nasync function init() {\n  let data = await readAsync('./package.json')\n\n  data = JSON.parse(data)\n  console.log(data.name)\n}\ninit()"]}